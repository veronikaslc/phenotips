<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses/
-->

<xwikidoc version="1.1">
  <web>PhenoTips</web>
  <name>UIX_Field__genes</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1401822202000</creationDate>
  <parent>PhenoTips.PatientSheet</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1401822202000</date>
  <contentUpdateDate>1401822202000</contentUpdateDate>
  <version>1.1</version>
  <title>$services.localization.render('phenotips.UIXField.genes')</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content/>
  <object>
    <name>PhenoTips.UIX_Field__genes</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>0c3e868a-743c-4714-ba1a-a04cbf6b0dd1</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>document.observe('xwiki:dom:loaded', function() {

  var fetchGeneDetails = function(geneRefs, geneNames) {
    if (!geneNames) {
      geneNames = geneRefs.pluck('value');
    }
    var i = 0;
    geneRefs.each(function (element) {
      if (element.value != "") {
        element._name = geneNames[i];
        var infoTool = new Element('span', {'class' : 'fa fa-info-circle xHelpButton gene-info', 'title' : geneNames[i]});
        var icon_helpController = new PhenoTips.widgets.HelpButton(infoTool);
        if (element.next() &amp;&amp; element.next().next() &amp;&amp; element.next().next().className.indexOf('xHelpButton gene-info') &gt; -1)
          element.next().next('span.xHelpButton').remove();
        if (element.next() &amp;&amp; element.next().className.indexOf('xHelpButton gene-info') &gt; -1)
          element.next('span.xHelpButton').remove();
        element.insert({after: infoTool});
        ++i;
     }
    });
  }

  var updateInfoIcon = function(el, value) {
    if (el.next().className.startsWith('LV_validation_message'))
        el.next().remove();
    //remove info icon if empty genesymbol
    if (el.value == "" &amp;&amp; el.next() &amp;&amp; el.next().className.indexOf('xHelpButton gene-info') &gt; -1)
      el.next().remove();
    //Hide/show variant add button if empty/non-empty genesymbol, update info icon
    if (el.value != "" ) {
      el.up('tr').next().toggleClassName('v-collapsed', false);
      if (el.next() &amp;&amp; el.next().className.indexOf('xHelpButton gene-info') &gt; -1) {
        fetchGeneDetails([el],[el.value]);
      }
    } else {
      el.up('tr').next().toggleClassName('v-collapsed', true);
    }
    //update genesymbol label for input field
     el.previous().innerHTML = value ? value : el.value;
  }

  fetchGeneDetails($$('input.gene-name'));

  $$('input.gene-name').invoke('observe', "ms:suggest:selected", function (event) {
    fetchGeneDetails([event.findElement()], event.memo &amp;&amp; [event.memo.value] || []);
  });

  $$('input.gene-name').invoke('observe', 'change', function (event) {
    updateInfoIcon(event.element(), null);
  });

  document.observe("xwiki:dom:updated", function(event) {
    if (event.memo &amp;&amp; event.memo.elements) {
      event.memo.elements.each(function (elt) {
        fetchGeneDetails(elt.select('input.gene-name'));
        var inputGene = elt.select('input.gene-name');
        inputGene.invoke('observe', "ms:suggest:selected", function (event) {
          fetchGeneDetails([event.findElement()], event.memo &amp;&amp; [event.memo.value] || []);
          updateInfoIcon(event.element(), event.memo.value);
        });
        inputGene.invoke('observe', 'change', function (event) {
          updateInfoIcon(event.element(), null);
        });
      });
    }
  })
})</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>PhenoTips.UIX_Field__genes</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>ddc20308-5638-42ba-9680-19944cc57e54</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>document.observe("xwiki:dom:loaded", function(event) {
  var geneSuggestOptions = {
            script: new XWiki.Document('GeneNameService', 'PhenoTips').getURL('get', 'outputSyntax=plain') + "&amp;",
            varname: "q",
            noresults: "$services.localization.render('phenotips.UIXField.genes.noMatches')",
            json: true,
            resultsParameter : "docs",
            resultId : 'symbol',
            resultValue : 'symbol',
            resultAltName : "alias_symbol",
            enableHierarchy: false,
            tooltip : 'gene-info',
            resultInfo : {},
            fadeOnClear : false,
            timeout : 30000,
            parentContainer : null
  };

  // -----------------------------------------------------------------
  // Create and attach the suggests
  // -----------------------------------------------------------------
  var attachPickers = function() {
    if (typeof(PhenoTips.widgets.Suggest) != "undefined") {
      $$('input.suggest-gene').each(function(item) {
        if (!item.hasClassName('initialized')) {
          item._suggest = new PhenoTips.widgets.Suggest(item, geneSuggestOptions);
          item.addClassName('initialized');
        }
      });
    }
  };
  attachPickers();
  document.observe("xwiki:dom:updated", attachPickers);
});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
